D G "__PCM__" 0 0 ""4.038""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""10-oct.-11""
D G "__TIME__" 0 0 ""15:56:06"" "------------ Programme Receip data capt -------------"
d G "PIN_A0" 2 20 "40"
d G "PIN_A1" 2 21 "41"
d G "PIN_A2" 2 22 "42"
d G "PIN_A3" 2 23 "43"
d G "PIN_A4" 2 24 "44"
d G "PIN_A5" 2 25 "45"
d G "PIN_A6" 2 26 "46"
d G "PIN_A7" 2 27 "47"
d G "PIN_B0" 2 29 "48"
d G "PIN_B1" 2 30 "49"
d G "PIN_B2" 2 31 "50"
d G "PIN_B3" 2 32 "51"
d G "PIN_B4" 2 33 "52"
d G "PIN_B5" 2 34 "53"
d G "PIN_B6" 2 35 "54"
d G "PIN_B7" 2 36 "55"
d G "PIN_C0" 2 38 "56"
d G "PIN_C1" 2 39 "57"
d G "PIN_C2" 2 40 "58"
d G "PIN_C3" 2 41 "59"
d G "PIN_C4" 2 42 "60"
d G "PIN_C5" 2 43 "61"
d G "PIN_C6" 2 44 "62"
d G "PIN_C7" 2 45 "63"
d G "PIN_D0" 2 47 "64"
d G "PIN_D1" 2 48 "65"
d G "PIN_D2" 2 49 "66"
d G "PIN_D3" 2 50 "67"
d G "PIN_D4" 2 51 "68"
d G "PIN_D5" 2 52 "69"
d G "PIN_D6" 2 53 "70"
d G "PIN_D7" 2 54 "71"
d G "PIN_E0" 2 56 "72"
d G "PIN_E1" 2 57 "73"
d G "PIN_E2" 2 58 "74"
d G "PIN_E3" 2 59 "75"
d G "FALSE" 2 62 "0"
d G "TRUE" 2 63 "1"
d G "BYTE" 2 65 "int"
d G "BOOLEAN" 2 66 "short int"
d G "getc" 2 68 "getch"
d G "fgetc" 2 69 "getch"
d G "getchar" 2 70 "getch"
d G "putc" 2 71 "putchar"
d G "fputc" 2 72 "putchar"
d G "fgets" 2 73 "gets"
d G "fputs" 2 74 "puts"
d G "WDT_FROM_SLEEP" 2 79 "3"
d G "WDT_TIMEOUT" 2 80 "11"
d G "MCLR_FROM_SLEEP" 2 81 "19"
d G "MCLR_FROM_RUN" 2 82 "27"
d G "NORMAL_POWER_UP" 2 83 "24"
d G "BROWNOUT_RESTART" 2 84 "26"
d G "RTCC_INTERNAL" 2 92 "0"
d G "RTCC_EXT_L_TO_H" 2 93 "32"
d G "RTCC_EXT_H_TO_L" 2 94 "48"
d G "RTCC_DIV_1" 2 96 "8"
d G "RTCC_DIV_2" 2 97 "0"
d G "RTCC_DIV_4" 2 98 "1"
d G "RTCC_DIV_8" 2 99 "2"
d G "RTCC_DIV_16" 2 100 "3"
d G "RTCC_DIV_32" 2 101 "4"
d G "RTCC_DIV_64" 2 102 "5"
d G "RTCC_DIV_128" 2 103 "6"
d G "RTCC_DIV_256" 2 104 "7"
d G "RTCC_8_BIT" 2 107 "0"
d G "WDT_18MS" 2 118 "0x8008"
d G "WDT_36MS" 2 119 "9"
d G "WDT_72MS" 2 120 "10"
d G "WDT_144MS" 2 121 "11"
d G "WDT_288MS" 2 122 "12"
d G "WDT_576MS" 2 123 "13"
d G "WDT_1152MS" 2 124 "14"
d G "WDT_2304MS" 2 125 "15"
d G "WDT_ON" 2 129 "0x4100"
d G "WDT_OFF" 2 130 "0"
d G "WDT_DIV_16" 2 131 "0x100"
d G "WDT_DIV_8" 2 132 "0x300"
d G "WDT_DIV_4" 2 133 "0x500"
d G "WDT_DIV_2" 2 134 "0x700"
d G "WDT_TIMES_1" 2 135 "0x900" "Default"
d G "WDT_TIMES_2" 2 136 "0xB00"
d G "WDT_TIMES_4" 2 137 "0xD00"
d G "WDT_TIMES_8" 2 138 "0xF00"
d G "WDT_TIMES_16" 2 139 "0x1100"
d G "WDT_TIMES_32" 2 140 "0x1300"
d G "WDT_TIMES_64" 2 141 "0x1500"
d G "WDT_TIMES_128" 2 142 "0x1700"
d G "T1_DISABLED" 2 148 "0"
d G "T1_INTERNAL" 2 149 "0x85"
d G "T1_EXTERNAL" 2 150 "0x87"
d G "T1_EXTERNAL_SYNC" 2 151 "0x83"
d G "T1_CLK_OUT" 2 153 "8"
d G "T1_DIV_BY_1" 2 155 "0"
d G "T1_DIV_BY_2" 2 156 "0x10"
d G "T1_DIV_BY_4" 2 157 "0x20"
d G "T1_DIV_BY_8" 2 158 "0x30"
d G "T1_GATE" 2 161 "0x40"
d G "T1_GATE_INVERTED" 2 162 "0xC0"
d G "T2_DISABLED" 2 167 "0"
d G "T2_DIV_BY_1" 2 168 "4"
d G "T2_DIV_BY_4" 2 169 "5"
d G "T2_DIV_BY_16" 2 170 "6"
d G "CCP_OFF" 2 176 "0"
d G "CCP_CAPTURE_FE" 2 177 "4"
d G "CCP_CAPTURE_RE" 2 178 "5"
d G "CCP_CAPTURE_DIV_4" 2 179 "6"
d G "CCP_CAPTURE_DIV_16" 2 180 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 181 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 182 "9"
d G "CCP_COMPARE_INT" 2 183 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 2 184 "0xB"
d G "CCP_PWM" 2 185 "0xC"
d G "CCP_PWM_PLUS_1" 2 186 "0x1c"
d G "CCP_PWM_PLUS_2" 2 187 "0x2c"
d G "CCP_PWM_PLUS_3" 2 188 "0x3c"
v G "CCP_1" 2 189 "int16"
d G "CCP_PWM_H_H" 2 194 "0x0c"
d G "CCP_PWM_H_L" 2 195 "0x0d"
d G "CCP_PWM_L_H" 2 196 "0x0e"
d G "CCP_PWM_L_L" 2 197 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 199 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 200 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 201 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 203 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 204 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 205 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 206 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 207 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 208 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 209 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 211 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 212 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 213 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 215 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 216 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 217 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 219 "0x80000000"
d G "CCP_PULSE_STEERING_A" 2 221 "0x01000000"
d G "CCP_PULSE_STEERING_B" 2 222 "0x02000000"
d G "CCP_PULSE_STEERING_C" 2 223 "0x04000000"
d G "CCP_PULSE_STEERING_D" 2 224 "0x08000000"
d G "CCP_PULSE_STEERING_SYNC" 2 225 "0x10000000"
v G "CCP_2" 2 227 "int16"
d G "SPI_MASTER" 2 234 "0x20"
d G "SPI_SLAVE" 2 235 "0x24"
d G "SPI_L_TO_H" 2 236 "0"
d G "SPI_H_TO_L" 2 237 "0x10"
d G "SPI_CLK_DIV_4" 2 238 "0"
d G "SPI_CLK_DIV_16" 2 239 "1"
d G "SPI_CLK_DIV_64" 2 240 "2"
d G "SPI_CLK_T2" 2 241 "3"
d G "SPI_SS_DISABLED" 2 242 "1"
d G "SPI_SAMPLE_AT_END" 2 244 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 245 "0x4000"
d G "UART_ADDRESS" 2 251 "2"
d G "UART_DATA" 2 252 "4"
d G "UART_AUTODETECT" 2 253 "8"
d G "UART_AUTODETECT_NOWAIT" 2 254 "9"
d G "UART_WAKEUP_ON_RDA" 2 255 "10"
d G "UART_SEND_BREAK" 2 256 "13"
d G "NC_NC_NC_NC" 2 260 "0x00"
d G "CP1_A1_A0" 2 263 "0x80"
d G "CP1_C1_A0" 2 264 "0x81"
d G "CP1_C2_A0" 2 265 "0x82"
d G "CP1_C3_A0" 2 266 "0x83"
d G "CP1_A1_VREF" 2 267 "0x84"
d G "CP1_C1_VREF" 2 268 "0x85"
d G "CP1_C2_VREF" 2 269 "0x86"
d G "CP1_C3_VREF" 2 270 "0x87"
d G "CP2_A1_A0" 2 272 "0x8000"
d G "CP2_C1_A0" 2 273 "0x8100"
d G "CP2_C2_A0" 2 274 "0x8200"
d G "CP2_C3_A0" 2 275 "0x8300"
d G "CP2_A1_VREF" 2 276 "0x8400"
d G "CP2_C1_VREF" 2 277 "0x8500"
d G "CP2_C2_VREF" 2 278 "0x8600"
d G "CP2_C3_VREF" 2 279 "0x8700"
d G "CP1_OUT_ON_A2" 2 281 "0x20"
d G "CP2_OUT_ON_C4" 2 282 "0x2000"
d G "COMP_INVERT_C1" 2 283 "0x10"
d G "COMP_INVERT_C2" 2 284 "0x1000"
d G "COMP_T1_SYNC" 2 285 "0x100000"
d G "COMP_T1_GATE" 2 286 "0x200000"
d G "CP1_HYST" 2 287 "0x800000"
d G "CP2_HYST" 2 288 "0x400000"
d G "T1_TIMES_4" 2 289 "0x1000000"
d G "CP1_LATCH_SET" 2 290 "0x60000000"
d G "CP2_LATCH_CLEAR" 2 291 "0x90000000"
d G "CP_LATCH_SET" 2 292 "0x8000000"
d G "CP_LATCH_CLEAR" 2 293 "0x4000000"
d G "CP_SR_CLK_DIV_4" 2 295 "0x1000000"
d G "CP_SR_CLK_DIV_8" 2 296 "0x1400000"
d G "CP_SR_CLK_DIV_16" 2 297 "0x1800000"
d G "CP_SR_CLK_DIV_32" 2 298 "0x1C00000"
d G "VREF_LOW" 2 307 "0xa0"
d G "VREF_HIGH" 2 308 "0x80"
d G "OSC_31KHZ" 2 314 "1"
d G "OSC_125KHZ" 2 315 "0x11"
d G "OSC_250KHZ" 2 316 "0x21"
d G "OSC_500KHZ" 2 317 "0x31"
d G "OSC_1MHZ" 2 318 "0x41"
d G "OSC_2MHZ" 2 319 "0x51"
d G "OSC_4MHZ" 2 320 "0x61"
d G "OSC_8MHZ" 2 321 "0x71"
d G "OSC_INTRC" 2 322 "1"
d G "OSC_NORMAL" 2 323 "0"
d G "OSC_STATE_STABLE" 2 325 "4"
d G "OSC_31KHZ_STABLE" 2 326 "2"
d G "ADC_OFF" 2 334 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 335 "0x100"
d G "ADC_CLOCK_DIV_8" 2 336 "0x40"
d G "ADC_CLOCK_DIV_32" 2 337 "0x80"
d G "ADC_CLOCK_INTERNAL" 2 338 "0xc0" "Internal 2-6us"
d G "sAN0" 2 342 "1" "| A0"
d G "sAN1" 2 343 "2" "| A1"
d G "sAN2" 2 344 "4" "| A2"
d G "sAN3" 2 345 "8" "| A3"
d G "sAN4" 2 346 "16" "| A5"
d G "sAN5" 2 347 "32" "| E0"
d G "sAN6" 2 348 "64" "| E1"
d G "sAN7" 2 349 "128" "| E2"
d G "sAN8" 2 350 "0x10000" "| B2"
d G "sAN9" 2 351 "0x20000" "| B3"
d G "sAN10" 2 352 "0x40000" "| B1"
d G "sAN11" 2 353 "0x80000" "| B4"
d G "sAN12" 2 354 "0x100000" "| B0"
d G "sAN13" 2 355 "0x200000" "| B5"
d G "NO_ANALOGS" 2 356 "0" "None"
d G "ALL_ANALOG" 2 357 "0x1F00FF" "A0 A1 A2 A3 A5 E0 E1 E2 B0 B1 B2 B3 B4 B5"
d G "VSS_VDD" 2 360 "0x0000" "| Range 0-Vdd"
d G "VSS_VREF" 2 361 "0x1000" "| Range 0-Vref"
d G "VREF_VREF" 2 362 "0x3000" "| Range Vref-Vref"
d G "VREF_VDD" 2 363 "0x2000" "| Range Vref-Vdd"
d G "ADC_START_AND_READ" 2 367 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 368 "1"
d G "ADC_READ_ONLY" 2 369 "6"
d G "L_TO_H" 2 378 "0x40"
d G "H_TO_L" 2 379 "0"
d G "GLOBAL" 2 381 "0x0BC0"
d G "INT_RTCC" 2 382 "0x0B20"
d G "INT_RB" 2 383 "0x1FF0B08"
d G "INT_EXT" 2 384 "0x0B10"
d G "INT_AD" 2 385 "0x8C40"
d G "INT_TBE" 2 386 "0x8C10"
d G "INT_RDA" 2 387 "0x8C20"
d G "INT_TIMER1" 2 388 "0x8C01"
d G "INT_TIMER2" 2 389 "0x8C02"
d G "INT_CCP1" 2 390 "0x8C04"
d G "INT_CCP2" 2 391 "0x8D01"
d G "INT_SSP" 2 392 "0x8C08"
d G "INT_BUSCOL" 2 393 "0x8D08"
d G "INT_EEPROM" 2 394 "0x8D10"
d G "INT_TIMER0" 2 395 "0x0B20"
d G "INT_OSC_FAIL" 2 396 "0x8D80"
d G "INT_COMP" 2 397 "0x8D20"
d G "INT_COMP2" 2 398 "0x8D40"
d G "INT_ULPWU" 2 399 "0x8D04"
d G "INT_RB0" 2 400 "0x010B08"
d G "INT_RB1" 2 401 "0x020B08"
d G "INT_RB2" 2 402 "0x040B08"
d G "INT_RB3" 2 403 "0x080B08"
d G "INT_RB4" 2 404 "0x100B08"
d G "INT_RB5" 2 405 "0x200B08"
d G "INT_RB6" 2 406 "0x400B08"
d G "INT_RB7" 2 407 "0x800B08"
D G "_STRING" 3 12 ""
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 18 "long"
D G "size_t" 4 21 "int"
D G "wchar_t" 4 22 "char"
D G "NULL" 4 23 "0"
D G "offsetof" 4 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 3 19 10 "FUNCTION"
V L "s1" 3 34 "*int8"
V L "s2" 3 34 "*int8"
V L "n" 3 34 "int8"
F G "memmove" 3 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 3 36 "*int8"
V L "sc2" 3 37 "*int8"
C L "strcopy" 3 19 3 "FUNCTION"
V L "s1" 3 53 "*int8"
V L "s2" 3 53 "*int8"
F G "strcopy" 3 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 55 "*int8"
C L "strncpy" 3 19 4 "FUNCTION"
V L "s1" 3 69 "*int8"
V L "s2" 3 69 "*int8"
V L "n" 3 69 "int8"
F G "strncpy" 3 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 3 71 "*int8"
C L "strcat" 3 19 3 "FUNCTION"
V L "s1" 3 86 "*int8"
V L "s2" 3 86 "*int8"
F G "strcat" 3 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 88 "*int8"
C L "strncat" 3 19 2 "FUNCTION"
V L "s1" 3 104 "*int8"
V L "s2" 3 104 "*int8"
V L "n" 3 104 "int8"
F G "strncat" 3 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 3 106 "*int8"
C L "memcmp" 3 19 3 "FUNCTION"
V L "s1" 3 128 "*int8"
V L "s2" 3 128 "*int8"
V L "n" 3 128 "int8"
F G "memcmp" 3 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 3 130 "*int8"
V L "su2" 3 130 "*int8"
C L "strcmp" 3 19 2 "FUNCTION"
V L "s1" 3 142 "*int8"
V L "s2" 3 142 "*int8"
F G "strcmp" 3 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 3 19 2 "FUNCTION"
V L "s1" 3 152 "*int8"
V L "s2" 3 152 "*int8"
F G "strcoll" 3 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 3 19 4 "FUNCTION"
V L "s1" 3 165 "*int8"
V L "s2" 3 165 "*int8"
V L "n" 3 165 "int8"
F G "strncmp" 3 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 3 19 3 "FUNCTION"
V L "s1" 3 177 "*int8"
V L "s2" 3 177 "*int8"
V L "n" 3 177 "int8"
F G "strxfrm" 3 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 3 179 "*int8"
V L "n1" 3 180 "int8"
C L "memchr" 3 19 3 "FUNCTION"
V L "s" 3 199 "*int8"
V L "c" 3 199 "int8"
V L "n" 3 199 "int8"
F G "memchr" 3 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 3 201 "int8"
V L "su" 3 202 "*int8"
C L "strchr" 3 19 2 "FUNCTION"
V L "s" 3 213 "*int8"
V L "c" 3 213 "int8"
F G "strchr" 3 214 "*int8(*int8 s,int8 c)"
C L "strcspn" 3 19 4 "FUNCTION"
V L "s1" 3 225 "*int8"
V L "s2" 3 225 "*int8"
F G "strcspn" 3 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 3 227 "*int8"
V L "sc2" 3 227 "*int8"
C L "strpbrk" 3 19 4 "FUNCTION"
V L "s1" 3 240 "*int8"
V L "s2" 3 240 "*int8"
F G "strpbrk" 3 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 3 242 "*int8"
V L "sc2" 3 242 "*int8"
C L "strrchr" 3 19 2 "FUNCTION"
V L "s" 3 255 "*int8"
V L "c" 3 255 "int8"
F G "strrchr" 3 256 "*int8(*int8 s,int8 c)"
V L "p" 3 257 "*int8"
C L "strspn" 3 19 2 "FUNCTION"
V L "s1" 3 270 "*int8"
V L "s2" 3 270 "*int8"
F G "strspn" 3 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 3 272 "*int8"
V L "sc2" 3 272 "*int8"
C L "strstr" 3 19 6 "FUNCTION"
V L "s1" 3 289 "*int8"
V L "s2" 3 289 "*int8"
F G "strstr" 3 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 291 "*int8"
V L "t" 3 291 "*int8"
C L "strtok" 3 19 13 "FUNCTION"
V L "s1" 3 328 "*int8"
V L "s2" 3 328 "*int8"
F G "strtok" 3 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 3 330 "*int8"
V L "end" 3 330 "*int8"
V L "save" 3 331 "*int8"
C L "strlen" 3 19 6 "FUNCTION"
V L "s" 3 377 "*int8"
F G "strlen" 3 378 "*int8(*int8 s)"
V L "sc" 3 379 "*int8"
C L "stricmp" 3 19 2 "FUNCTION"
V L "s1" 3 388 "*int8"
V L "s2" 3 388 "*int8"
F G "stricmp" 3 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 3 19 3 "FUNCTION"
V L "s" 3 402 "*int8"
F G "strlwr" 3 403 "*int8(*int8 s)"
V L "p" 3 404 "*int8"
D G "_STDLIB" 6 12 ""
D G "RAND_MAX" 6 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 6 24 "1"
T G "div_t" 6 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 6 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atof" 4 3 6 "FUNCTION"
C L "atof" 6 43 2 "FUNCTION"
C L "atof" 6 46 1 "*"
C L "atof" 6 46 1 "*"
V L "s" 6 50 "*int8"
F G "atof" 6 50 "float(*int8 s)" "Standard template: float atoe(char * s)"
C L "atof" 6 52 1 "*"
C L "atof" 6 52 1 "*"
C L "atof" 6 52 1 "*"
V L "s" 6 57 "*int8"
F G "atoe" 6 57 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 6 59 1 "*"
C L "atoe" 6 59 1 "*"
V L "s" 6 63 "*int8"
F G "atoi" 6 63 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
C L "atoi" 6 59 2 "FUNCTION"
V L "s" 6 68 "*int8"
F G "atoi32" 6 68 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 6 59 2 "FUNCTION"
V L "num" 6 73 "sint32"
V L "base" 6 73 "int8"
V L "s" 6 73 "*int8"
F G "itoa" 6 73 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed long  atol(char * s)"
C L "itoa" 6 75 1 "*"
C L "itoa" 6 75 1 "*"
V L "s" 6 79 "*int8"
F G "atol" 6 79 "sint16(*int8 s)" "Standard template: float strtol(char * s,char *endptr)"
C L "atol" 6 81 1 "*"
C L "atol" 6 81 1 "*"
C L "atol" 6 81 1 "*"
V L "s" 6 86 "*int8"
V L "endptr" 6 86 "*int8"
F G "strtod" 6 86 "float(*int8 s,*int8 endptr)" "Standard template: long strtoul(char * s,char *endptr,signed int base)"
C L "strtod" 6 88 1 "*"
C L "strtod" 6 88 1 "*"
C L "strtod" 6 88 1 "*"
C L "strtod" 6 88 1 "*"
V L "s" 6 94 "*int8"
V L "endptr" 6 94 "*int8"
V L "base" 6 94 "sint8"
F G "strtol" 6 94 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: long strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 6 96 1 "*"
C L "strtol" 6 96 1 "*"
C L "strtol" 6 96 1 "*"
C L "strtol" 6 96 1 "*"
V L "s" 6 102 "*int8"
V L "endptr" 6 102 "*int8"
V L "base" 6 102 "sint8"
F G "strtoul" 6 102 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 6 96 1 "FUNCTION"
C L "strtoul" 6 108 1 "*"
C L "strtoul" 6 108 1 "*"
C L "strtoul" 6 108 1 "*"
C L "strtoul" 6 108 1 "*"
C L "strtoul" 6 108 1 "*"
F G "rand" 6 117 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
C L "rand" 6 119 1 "*"
V L "seed" 6 139 "int32"
F G "srand" 6 139 "void(int32 seed)" "Memory management functions"
C L "srand" 6 119 3 "FUNCTION"
V L "string" 6 153 "*int8"
F G "system" 6 153 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 6 119 1 "FUNCTION"
C L "system" 6 159 1 "*"
C L "system" 6 159 1 "*"
C L "system" 6 159 1 "*"
C L "system" 6 159 1 "*"
C L "system" 6 159 1 "*"
C L "system" 6 159 1 "*"
C L "system" 6 159 1 "*"
C L "system" 6 159 1 "*"
C L "system" 6 159 1 "*"
C L "system" 6 159 1 "*"
C L "system" 6 159 4 "*"
C L "system" 6 177 1 "*"
C L "system" 6 177 1 "*"
C L "system" 6 177 1 "*"
C L "system" 6 177 1 "*"
C L "system" 6 177 1 "*"
C L "system" 6 177 1 "*"
C L "system" 6 177 1 "*"
C L "system" 6 177 1 "*"
D G "labs" 6 197 "abs"
V L "numer" 6 199 "sint8"
V L "denom" 6 199 "sint8"
F G "div" 6 199 "div_t(sint8 numer,sint8 denom)"
V L "numer" 6 200 "sint16"
V L "denom" 6 200 "sint16"
F G "ldiv" 6 200 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 6 177 4 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
C L "ldiv" 3 2 7 "FUNCTION"
V L "numer" 6 222 "sint8"
V L "denom" 6 222 "sint8"
F G "div" 6 223 "div_t(sint8 numer,sint8 denom)"
V L "val" 6 224 "div_t"
V L "numer" 6 230 "sint16"
V L "denom" 6 230 "sint16"
F G "ldiv" 6 231 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 6 232 "ldiv_t"
V L "s" 6 238 "*int8"
F G "atof" 6 239 "float(*int8 s)"
V L "pow10" 6 240 "float"
V L "result" 6 241 "float"
V L "sign" 6 242 "int8"
V L "c" 6 243 "int8"
V L "ptr" 6 244 "int8"
V L "s" 6 277 "*int8"
F G "atoe" 6 278 "float(*int8 s)"
V L "pow10" 6 279 "float"
V L "result" 6 280 "float"
V L "sign" 6 281 "int8"
V L "expsign" 6 282 "int8"
V L "c" 6 283 "int8"
V L "ptr" 6 284 "int8"
V L "i" 6 285 "int8"
V L "exp" 6 286 "float"
V L "expcnt" 6 287 "int8"
C L "atoe" 6 313 1 "FUNCTION"
V L "s" 6 344 "*int8"
F G "atoi" 6 345 "sint8(*int8 s)"
V L "result" 6 346 "sint8"
V L "sign" 6 347 "int8"
V L "base" 6 347 "int8"
V L "index" 6 347 "int8"
V L "c" 6 348 "int8"
C L "atoi" 6 313 1 "FUNCTION"
C L "atoi" 6 313 1 "FUNCTION"
C L "atoi" 6 313 1 "FUNCTION"
C L "atoi" 6 313 1 "FUNCTION"
C L "atoi" 6 313 1 "FUNCTION"
C L "atoi" 6 313 1 "FUNCTION"
V L "s" 6 413 "*int8"
F G "atol" 6 414 "sint16(*int8 s)"
V L "result" 6 415 "sint16"
V L "sign" 6 416 "int8"
V L "base" 6 416 "int8"
V L "index" 6 416 "int8"
V L "c" 6 417 "int8"
C L "atol" 6 313 1 "FUNCTION"
C L "atol" 6 313 1 "FUNCTION"
C L "atol" 6 313 1 "FUNCTION"
C L "atol" 6 313 1 "FUNCTION"
C L "mult_with10" 6 313 1 "FUNCTION"
V L "num" 6 480 "int32"
F G "mult_with10" 6 481 "sint32(int32 num)"
V L "s" 6 485 "*int8"
F G "atoi32" 6 486 "sint32(*int8 s)"
V L "result" 6 487 "sint32"
V L "sign" 6 488 "int8"
V L "base" 6 488 "int8"
V L "index" 6 488 "int8"
V L "c" 6 489 "int8"
C L "atoi32" 6 313 1 "FUNCTION"
C L "atoi32" 6 313 1 "FUNCTION"
C L "atoi32" 6 313 1 "FUNCTION"
C L "atoi32" 6 313 1 "FUNCTION"
C L "atoi32" 6 313 1 "FUNCTION"
V L "num" 6 550 "sint32"
V L "base" 6 550 "int8"
V L "s" 6 550 "*int8"
F G "itoa" 6 551 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 6 552 "int32"
V L "i" 6 553 "int8"
V L "sign" 6 553 "int8"
V L "cnt" 6 553 "int8"
V L "c" 6 554 "int8"
C L "itoa" 6 313 1 "FUNCTION"
C L "itoa" 6 313 1 "FUNCTION"
C L "itoa" 6 313 1 "FUNCTION"
C L "itoa" 6 313 1 "FUNCTION"
C L "itoa" 6 313 1 "FUNCTION"
V L "s" 6 587 "*int8"
V L "endptr" 6 587 "*int8"
F G "strtod" 6 587 "float(*int8 s,*int8 endptr)"
V L "pow10" 6 588 "float"
V L "result" 6 589 "float"
V L "sign" 6 590 "int8"
V L "point" 6 590 "int8"
V L "c" 6 591 "int8"
V L "ptr" 6 592 "int8"
V L "s" 6 651 "*int8"
V L "endptr" 6 651 "*int8"
V L "base" 6 651 "sint8"
F G "strtoul" 6 652 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 6 653 "*int8"
V L "s1" 6 653 "*int8"
V L "sd" 6 653 "*int8"
V L "x" 6 654 "int16"
V L "sign" 6 655 "int8"
V L "digits" 6 656 "int8[1]"
C L "strtoul" 6 313 1 "FUNCTION"
C L "strtoul" 6 313 1 "FUNCTION"
C L "strtoul" 6 313 1 "FUNCTION"
V L "s" 6 713 "*int8"
V L "endptr" 6 713 "*int8"
V L "base" 6 713 "sint8"
F G "strtol" 6 714 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 6 715 "*int8"
V L "s1" 6 715 "*int8"
V L "sd" 6 715 "*int8"
V L "x" 6 716 "sint16"
V L "sign" 6 717 "int8"
V L "digits" 6 718 "int8[1]"
C L "strtol" 6 313 1 "FUNCTION"
C L "strtol" 6 313 1 "FUNCTION"
C L "strtol" 6 313 1 "FUNCTION"
V L "string" 6 776 "*int8"
F G "system" 6 777 "sint8(*int8 string)"
V L "s" 6 781 "*int8"
V L "n" 6 781 "int8"
F G "mblen" 6 782 "int8(*int8 s,int8 n)"
V L "pwc" 6 786 "*int8"
V L "s" 6 786 "*int8"
V L "n" 6 786 "int8"
F G "mbtowc" 6 787 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 6 792 "*int8"
V L "wchar" 6 792 "int8"
F G "wctomb" 6 793 "int8(*int8 s,int8 wchar)"
V L "pwcs" 6 798 "*int8"
V L "s" 6 798 "*int8"
V L "n" 6 798 "int8"
F G "mbstowcs" 6 799 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 6 804 "*int8"
V L "pwcs" 6 804 "*int8"
V L "n" 6 804 "int8"
F G "wcstombs" 6 805 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 6 814 "int32"
F G "rand" 6 817 "int16()"
V L "seed" 6 822 "int32"
F G "srand" 6 823 "void(int32 seed)"
V L "p1" 6 831 "*int8"
V L "p2" 6 831 "*int8"
T G "*_Cmpfun" 6 831 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 6 833 "*int8"
V L "qitems" 6 833 "int8"
V L "qsize" 6 833 "int8"
V L "cmp" 6 833 "_Cmpfun"
F G "qsort" 6 833 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 6 834 "int8"
V L "j" 6 834 "int8"
V L "i" 6 834 "int8"
V L "l" 6 834 "int8"
V L "done" 6 835 "int1"
V L "t" 6 836 "int8[16]"
V L "key" 6 861 "*int8"
V L "base" 6 861 "*int8"
V L "num" 6 861 "int8"
V L "width" 6 861 "int8"
V L "cmp" 6 861 "_Cmpfun"
F G "bsearch" 6 862 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 6 863 "*int8"
V L "q" 6 863 "*int8"
V L "n" 6 864 "int8"
V L "pivot" 6 865 "int8"
V L "val" 6 866 "sint8"
C L "bsearch" 6 313 1 "FUNCTION"
V G "lcd" 7 44 "{int1 unused1,int1 unused2,int1 rs,int1 en,int4 data}"
D G "set_tris_lcd" 7 49 "(x) set_tris_b(x)"
V G "LCD_WRITE" 7 51 "{int1 unused1,int1 unused2,int1 rs,int1 en,int4 data}"
V G "LCD_INIT_STRING" 7 54 "int8[4]"
C L "lcd_send_nibble" 7 2 1 "FUNCTION"
V L "n" 7 57 "int8"
F G "lcd_send_nibble" 7 57 "void(int8 n)"
V L "cmd" 7 58 "int8"
V L "n" 7 58 "int8"
F G "lcd_send_byte" 7 58 "void(int8 cmd,int8 n)"
V L "c" 7 59 "int8"
F G "lcd_char" 7 59 "void(int8 c)"
F G "lcd_init" 7 60 "void()"
V L "colonne" 7 61 "int8"
V L "ligne" 7 61 "int8"
F G "lcd_gotoxy" 7 61 "void(int8 colonne,int8 ligne)"
V L "x" 7 62 "int8"
F G "lcd_cursor" 7 62 "void(int8 x)"
V L "x" 7 63 "int8"
F G "lcd_blink" 7 63 "void(int8 x)"
V L "message" 7 64 "*int8"
F G "lcd_printf" 7 64 "void(*int8 message)" "---------------------Send Half Byte------------------"
V L "n" 7 67 "int8"
F G "lcd_send_nibble" 7 67 "void(int8 n)"
C L "lcd_send_nibble" 7 2 1 "FUNCTION"
C L "lcd_send_nibble" 7 2 1 "FUNCTION"
C L "lcd_send_nibble" 7 2 1 "FUNCTION"
C L "lcd_send_nibble" 7 2 1 "FUNCTION"
C L "lcd_send_nibble" 7 2 1 "FUNCTION"
C L "lcd_send_byte" 7 2 3 "FUNCTION"
V L "cmd" 7 79 "int8"
V L "n" 7 79 "int8"
F G "lcd_send_byte" 7 79 "void(int8 cmd,int8 n)"
C L "lcd_send_byte" 7 2 1 "FUNCTION"
C L "lcd_send_byte" 7 2 1 "FUNCTION"
C L "lcd_send_byte" 7 2 1 "FUNCTION"
C L "lcd_send_byte" 7 2 1 "FUNCTION"
C L "lcd_char" 7 2 3 "FUNCTION"
V L "c" 7 90 "int8"
F G "lcd_char" 7 90 "void(int8 c)"
C L "lcd_char" 7 2 1 "FUNCTION"
C L "lcd_char" 7 2 1 "FUNCTION"
C L "lcd_char" 7 2 1 "FUNCTION"
C L "lcd_char" 7 2 2 "FUNCTION"
C L "lcd_char" 7 2 1 "FUNCTION"
C L "lcd_char" 7 2 1 "FUNCTION"
C L "lcd_init" 7 2 1 "FUNCTION"
F G "lcd_init" 7 105 "void()"
V L "i" 7 106 "int8"
C L "lcd_init" 7 2 1 "FUNCTION"
C L "lcd_init" 7 2 1 "FUNCTION"
C L "lcd_gotoxy" 7 2 3 "FUNCTION"
V L "colonne" 7 117 "int8"
V L "ligne" 7 117 "int8"
F G "lcd_gotoxy" 7 117 "void(int8 colonne,int8 ligne)"
C L "lcd_gotoxy" 7 2 1 "FUNCTION"
C L "lcd_gotoxy" 7 2 1 "FUNCTION"
C L "lcd_gotoxy" 7 2 1 "FUNCTION"
C L "lcd_gotoxy" 7 2 1 "FUNCTION"
C L "lcd_cursor" 7 2 3 "FUNCTION"
V L "x" 7 127 "int8"
F G "lcd_cursor" 7 127 "void(int8 x)"
C L "lcd_cursor" 7 2 1 "FUNCTION"
C L "lcd_cursor" 7 2 1 "FUNCTION"
C L "lcd_blink" 7 2 3 "FUNCTION"
V L "x" 7 136 "int8"
F G "lcd_blink" 7 136 "void(int8 x)"
C L "lcd_blink" 7 2 1 "FUNCTION"
C L "lcd_blink" 7 2 1 "FUNCTION"
V L "message" 7 143 "*int8" "Write message to LCD (C string type)"
F G "lcd_printf" 7 144 "void(*int8 message)"
C L "lcd_printf" 7 2 1 "FUNCTION"
C L "lcd_printf" 7 2 1 "FUNCTION"
D G "led" 1 16 "PIN_A4"
D G "bluethoot" 1 17 "PIN_A4"
D G "entete" 1 28 "0xFF"
D G "adr_inout" 1 29 "0x00"
D G "adr_ADC" 1 30 "0x00"
D G "adr_acc" 1 31 "0x3A"
D G "adr_boussole" 1 32 "0x42"
D G "adr_temp" 1 33 "0x90"
D G "adr_light" 1 34 "0x46"
D G "adr_srf02" 1 35 "0xe0"
D G "typ_inout" 1 37 "0x00				" "1 byte"
D G "typ_acc_x" 1 38 "0x01				" "4 bytes"
D G "typ_acc_y" 1 39 "0x02				" "4 bytes"
D G "typ_acc_z" 1 40 "0x03				" "4 bytes"
D G "typ_temp" 1 41 "0x04				" "3 bytes"
D G "typ_light" 1 42 "0x05				" "4 bytes"
D G "typ_srf02" 1 43 "0x06				" "4 bytes"
D G "typ_adc01" 1 44 "0x07				" "2 bytes"
D G "typ_boussole" 1 45 "0x0c			" "2 bytes"
D G "BUFFER_SIZE" 1 47 "16								" "Buffer maxi de lecture RS232"
D G "bkbhit" 1 48 " (next_in!=next_out)	"
V G "buffer" 0 23 "int8[16]"
V G "next_in" 0 24 "int8"
V G "next_out" 0 25 "int8"
V G "varbin" 0 26 "int8[9]"
V G "data" 0 27 "int8[16]"
V G "flagp" 0 28 "int1" "-------------------------xxx------------------------"
F G "serial_isr" 0 32 "void()"
V L "t" 0 33 "int8"
C L "serial_isr" 0 21 1 "FUNCTION"
C L "serial_isr" 0 21 1 "FUNCTION"
C L "beep" 0 21 2 "FUNCTION"
V L "freq" 0 44 "int8"
V L "duree" 0 44 "int8"
F G "beep" 0 45 "void(int8 freq,int8 duree)"
C L "dec2bin" 0 21 1 "FUNCTION"
V L "val" 0 54 "int8"
F G "dec2bin" 0 54 "void(int8 val)" "decimal to binaire (string)"
V L "i" 0 55 "int8"
V L "x" 0 55 "int8"
C L "bgetc" 0 21 1 "FUNCTION"
F G "bgetc" 0 70 "int8()" "lecture du buffer serie"
V L "c" 0 71 "int8"
C L "bgetc" 0 21 1 "FUNCTION"
C L "bgetc" 0 21 1 "FUNCTION"
C L "bgetc" 0 21 1 "FUNCTION"
C L "initialisation" 0 21 1 "FUNCTION"
F G "initialisation" 0 80 "void()"
C L "initialisation" 0 21 1 "FUNCTION"
C L "initialisation" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
F G "lect_capteurs" 0 92 "void()"
V L "i" 0 93 "int8"
V L "val" 0 94 "int16"
V L "val1" 0 95 "sint16"
V L "val2" 0 95 "sint16"
V L "val3" 0 95 "sint16"
V L "celc" 0 96 "float"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "lect_capteurs" 0 21 1 "FUNCTION"
C L "MAIN" 0 21 1 "FUNCTION"
F G "MAIN" 0 165 "void()"
C L "MAIN" 0 21 1 "FUNCTION"
C L "MAIN" 0 21 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep_ulpwu" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 4 0
F B "write_program_memory8" 4 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "erase_program_eeprom" 1 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_vref" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 2
F B "setup_uart" 1 2
