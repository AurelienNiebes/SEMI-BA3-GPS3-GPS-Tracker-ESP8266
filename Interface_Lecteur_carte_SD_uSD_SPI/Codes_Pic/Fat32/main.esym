D G "__PCH__" 0 0 ""4.106""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""19-nov.-12""
D G "__TIME__" 0 0 ""14:42:17"" "This example open a file for append, and writes "System"
d G "PIN_A0" 1 28 "31744"
d G "PIN_A1" 1 29 "31745"
d G "PIN_A2" 1 30 "31746"
d G "PIN_A3" 1 31 "31747"
d G "PIN_A4" 1 32 "31748"
d G "PIN_A5" 1 33 "31749"
d G "PIN_A6" 1 34 "31750"
d G "PIN_B0" 1 36 "31752"
d G "PIN_B1" 1 37 "31753"
d G "PIN_B2" 1 38 "31754"
d G "PIN_B3" 1 39 "31755"
d G "PIN_B4" 1 40 "31756"
d G "PIN_B5" 1 41 "31757"
d G "PIN_B6" 1 42 "31758"
d G "PIN_B7" 1 43 "31759"
d G "PIN_C0" 1 45 "31760"
d G "PIN_C1" 1 46 "31761"
d G "PIN_C2" 1 47 "31762"
d G "PIN_C4" 1 48 "31764"
d G "PIN_C5" 1 49 "31765"
d G "PIN_C6" 1 50 "31766"
d G "PIN_C7" 1 51 "31767"
d G "PIN_D0" 1 53 "31768"
d G "PIN_D1" 1 54 "31769"
d G "PIN_D2" 1 55 "31770"
d G "PIN_D3" 1 56 "31771"
d G "PIN_D4" 1 57 "31772"
d G "PIN_D5" 1 58 "31773"
d G "PIN_D6" 1 59 "31774"
d G "PIN_D7" 1 60 "31775"
d G "PIN_E0" 1 62 "31776"
d G "PIN_E1" 1 63 "31777"
d G "PIN_E2" 1 64 "31778"
d G "PIN_E3" 1 65 "31779"
d G "PIN_E7" 1 66 "31783"
d G "FALSE" 1 69 "0"
d G "TRUE" 1 70 "1"
d G "BYTE" 1 72 "int8"
d G "BOOLEAN" 1 73 "int1"
d G "getc" 1 75 "getch"
d G "fgetc" 1 76 "getch"
d G "getchar" 1 77 "getch"
d G "putc" 1 78 "putchar"
d G "fputc" 1 79 "putchar"
d G "fgets" 1 80 "gets"
d G "fputs" 1 81 "puts"
d G "WDT_TIMEOUT" 1 87 "7"
d G "MCLR_FROM_SLEEP" 1 88 "11"
d G "MCLR_FROM_RUN" 1 89 "15"
d G "NORMAL_POWER_UP" 1 90 "12"
d G "BROWNOUT_RESTART" 1 91 "14"
d G "WDT_FROM_SLEEP" 1 92 "3"
d G "RESET_INSTRUCTION" 1 93 "0"
d G "REG_LOW_POWER" 1 96 "1"
d G "REG_NORMAL" 1 97 "0" "default"
d G "T0_INTERNAL" 1 105 "0"
d G "T0_EXT_L_TO_H" 1 106 "32"
d G "T0_EXT_H_TO_L" 1 107 "48"
d G "T0_DIV_1" 1 109 "8"
d G "T0_DIV_2" 1 110 "0"
d G "T0_DIV_4" 1 111 "1"
d G "T0_DIV_8" 1 112 "2"
d G "T0_DIV_16" 1 113 "3"
d G "T0_DIV_32" 1 114 "4"
d G "T0_DIV_64" 1 115 "5"
d G "T0_DIV_128" 1 116 "6"
d G "T0_DIV_256" 1 117 "7"
d G "T0_OFF" 1 119 "0x80"
d G "T0_8_BIT" 1 121 "0x40"
d G "RTCC_INTERNAL" 1 123 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 124 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 125 "48"
d G "RTCC_DIV_1" 1 126 "8"
d G "RTCC_DIV_2" 1 127 "0"
d G "RTCC_DIV_4" 1 128 "1"
d G "RTCC_DIV_8" 1 129 "2"
d G "RTCC_DIV_16" 1 130 "3"
d G "RTCC_DIV_32" 1 131 "4"
d G "RTCC_DIV_64" 1 132 "5"
d G "RTCC_DIV_128" 1 133 "6"
d G "RTCC_DIV_256" 1 134 "7"
d G "RTCC_OFF" 1 135 "0x80"
d G "RTCC_8_BIT" 1 136 "0x40"
d G "WDT_ON" 1 147 "0x100"
d G "WDT_OFF" 1 148 "0"
d G "T1_DISABLED" 1 154 "0"
d G "T1_INTERNAL" 1 155 "0x85"
d G "T1_EXTERNAL" 1 156 "0x87"
d G "T1_EXTERNAL_SYNC" 1 157 "0x83"
d G "T1_CLK_OUT" 1 159 "8"
d G "T1_DIV_BY_1" 1 161 "0"
d G "T1_DIV_BY_2" 1 162 "0x10"
d G "T1_DIV_BY_4" 1 163 "0x20"
d G "T1_DIV_BY_8" 1 164 "0x30"
d G "T2_DISABLED" 1 169 "0"
d G "T2_DIV_BY_1" 1 170 "4"
d G "T2_DIV_BY_4" 1 171 "5"
d G "T2_DIV_BY_16" 1 172 "6"
d G "T3_DISABLED" 1 178 "0"
d G "T3_INTERNAL" 1 179 "0x85"
d G "T3_EXTERNAL" 1 180 "0x87"
d G "T3_EXTERNAL_SYNC" 1 181 "0x83"
d G "T3_DIV_BY_1" 1 183 "0"
d G "T3_DIV_BY_2" 1 184 "0x10"
d G "T3_DIV_BY_4" 1 185 "0x20"
d G "T3_DIV_BY_8" 1 186 "0x30"
d G "T3_CCP1_TO_2" 1 189 "0x48"
d G "T3_CCP2" 1 190 "0x8"
d G "CCP_OFF" 1 196 "0"
d G "CCP_CAPTURE_FE" 1 197 "4"
d G "CCP_CAPTURE_RE" 1 198 "5"
d G "CCP_CAPTURE_DIV_4" 1 199 "6"
d G "CCP_CAPTURE_DIV_16" 1 200 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 201 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 202 "9"
d G "CCP_COMPARE_INT" 1 203 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 204 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 205 "0xB"
d G "CCP_PWM" 1 206 "0xC"
d G "CCP_PWM_PLUS_1" 1 207 "0x1c"
d G "CCP_PWM_PLUS_2" 1 208 "0x2c"
d G "CCP_PWM_PLUS_3" 1 209 "0x3c"
d G "CCP_PWM_H_H" 1 215 "0x0c"
d G "CCP_PWM_H_L" 1 216 "0x0d"
d G "CCP_PWM_L_H" 1 217 "0x0e"
d G "CCP_PWM_L_L" 1 218 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 1 220 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 1 221 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 1 222 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 1 224 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 1 225 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 1 226 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 1 227 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 228 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 229 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 1 230 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 1 232 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 1 233 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 1 234 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 1 236 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 1 237 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 1 238 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 1 240 "0x80000000"
d G "PSP_ENABLED" 1 250 "0x10"
d G "PSP_DISABLED" 1 251 "0"
d G "SPI_MASTER" 1 258 "0x20"
d G "SPI_SLAVE" 1 259 "0x24"
d G "SPI_L_TO_H" 1 260 "0"
d G "SPI_H_TO_L" 1 261 "0x10"
d G "SPI_CLK_DIV_4" 1 262 "0"
d G "SPI_CLK_DIV_16" 1 263 "1"
d G "SPI_CLK_DIV_64" 1 264 "2"
d G "SPI_CLK_T2" 1 265 "3"
d G "SPI_SS_DISABLED" 1 266 "1"
d G "SPI_SAMPLE_AT_END" 1 268 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 269 "0x4000"
d G "UART_ADDRESS" 1 275 "2"
d G "UART_DATA" 1 276 "4"
d G "UART_AUTODETECT" 1 277 "8"
d G "UART_AUTODETECT_NOWAIT" 1 278 "9"
d G "UART_WAKEUP_ON_RDA" 1 279 "10"
d G "UART_SEND_BREAK" 1 280 "13"
d G "A0_A3_A1_A3" 1 284 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 285 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 286 "0xbcf05"
d G "NC_NC_NC_NC" 1 287 "0x0ff07"
d G "A0_A3_A1_A2" 1 288 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 289 "0x9ef01"
d G "A0_VR_A1_VR" 1 290 "0x3ff06"
d G "A3_VR_A2_VR" 1 291 "0xcff0e"
d G "CP1_INVERT" 1 292 "0x0000010"
d G "CP2_INVERT" 1 293 "0x0000020"
d G "VREF_LOW" 1 301 "0xa0"
d G "VREF_HIGH" 1 302 "0x80"
d G "VREF_F5" 1 304 "0x40"
d G "VREF_COMP" 1 305 "0x10"
d G "LVD_LVDIN" 1 310 "0x1F"
d G "LVD_45" 1 311 "0x1E"
d G "LVD_42" 1 312 "0x1D"
d G "LVD_40" 1 313 "0x1C"
d G "LVD_38" 1 314 "0x1B"
d G "LVD_36" 1 315 "0x1A"
d G "LVD_35" 1 316 "0x19"
d G "LVD_33" 1 317 "0x18"
d G "LVD_30" 1 318 "0x17"
d G "LVD_28" 1 319 "0x16"
d G "LVD_27" 1 320 "0x15"
d G "LVD_25" 1 321 "0x14"
d G "LVD_24" 1 322 "0x13"
d G "LVD_23" 1 323 "0x12"
d G "LVD_22" 1 324 "0x11"
d G "LVD_21" 1 325 "0x10"
d G "LVD_TRIGGER_BELOW" 1 327 "0"
d G "LVD_TRIGGER_ABOVE" 1 328 "0x80"
d G "OSC_31KHZ" 1 334 "0"
d G "OSC_125KHZ" 1 335 "0x10"
d G "OSC_250KHZ" 1 336 "0x20"
d G "OSC_500KHZ" 1 337 "0x30"
d G "OSC_1MHZ" 1 338 "0x40"
d G "OSC_2MHZ" 1 339 "0x50"
d G "OSC_4MHZ" 1 340 "0x60"
d G "OSC_8MHZ" 1 341 "0x70"
d G "OSC_16MHZ" 1 342 "0x4060"
d G "OSC_32MHZ" 1 343 "0x4070"
d G "OSC_TIMER1" 1 345 "1"
d G "OSC_INTRC" 1 346 "2"
d G "OSC_NORMAL" 1 347 "0"
d G "OSC_IDLE_MODE" 1 349 "0x80"
d G "OSC_31250" 1 350 "0x8000"
d G "OSC_PLL_ON" 1 351 "0x4000"
d G "OSC_PLL_OFF" 1 352 "0"
d G "OSC_STATE_STABLE" 1 356 "4"
d G "OSC_STATE_EXT_RUNNING" 1 357 "8"
d G "ADC_OFF" 1 364 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 365 "0x100"
d G "ADC_CLOCK_DIV_4" 1 366 "0x04"
d G "ADC_CLOCK_DIV_8" 1 367 "0x01"
d G "ADC_CLOCK_DIV_16" 1 368 "0x05"
d G "ADC_CLOCK_DIV_32" 1 369 "0x02"
d G "ADC_CLOCK_DIV_64" 1 370 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 371 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 1 374 "0x0F" "None"
d G "ALL_ANALOG" 1 375 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 376 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 377 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 1 378 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 1 379 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 1 380 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 1 381 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 1 382 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 1 383 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 384 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 385 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 386 "0x0D" "A0 A1"
d G "AN0" 1 387 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 388 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 389 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 390 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 391 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 1 392 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 1 393 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 1 394 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 395 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 396 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 397 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 398 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 399 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 402 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 403 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 404 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 405 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 409 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 410 "1"
d G "ADC_READ_ONLY" 1 411 "6"
d G "L_TO_H" 1 423 "0x40"
d G "H_TO_L" 1 424 "0"
d G "GLOBAL" 1 426 "0xF2C0"
d G "INT_RTCC" 1 427 "0x00F220"
d G "INT_TIMER0" 1 428 "0x00F220"
d G "INT_TIMER1" 1 429 "0x009D01"
d G "INT_TIMER2" 1 430 "0x009D02"
d G "INT_TIMER3" 1 431 "0x00A002"
d G "INT_EXT_L2H" 1 432 "0x5000F210"
d G "INT_EXT_H2L" 1 433 "0x6000F210"
d G "INT_EXT" 1 434 "0x00F210"
d G "INT_EXT1_L2H" 1 435 "0x5001F008"
d G "INT_EXT1_H2L" 1 436 "0x6001F008"
d G "INT_EXT1" 1 437 "0x00F008"
d G "INT_EXT2_L2H" 1 438 "0x5002F010"
d G "INT_EXT2_H2L" 1 439 "0x6002F010"
d G "INT_EXT2" 1 440 "0x00F010"
d G "INT_RB" 1 441 "0x00FFF208"
d G "INT_AD" 1 442 "0x009D40"
d G "INT_RDA" 1 443 "0x009D20"
d G "INT_TBE" 1 444 "0x009D10"
d G "INT_SSP" 1 445 "0x009D08"
d G "INT_CCP1" 1 446 "0x009D04"
d G "INT_CCP2" 1 447 "0x00A001"
d G "INT_BUSCOL" 1 448 "0x00A008"
d G "INT_LOWVOLT" 1 449 "0x00A004"
d G "INT_COMP" 1 450 "0x00A040"
d G "INT_EEPROM" 1 451 "0x00A010"
d G "INT_OSCF" 1 452 "0x00A080"
d G "INT_SPP" 1 453 "0x009D80"
d G "INT_USB" 1 454 "0x00A020"
D G "_STRING" 2 12 ""
D G "_STDDEF" 3 13 ""
D G "ptrdiff_t" 3 18 "unsigned int16"
D G "size_t" 3 21 "unsigned int8"
D G "wchar_t" 3 22 "char"
D G "NULL" 3 23 "0"
D G "offsetof" 3 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 4 12 ""
D G "islower" 4 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 4 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 4 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 4 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 4 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 4 19 "(x)  ((x)==' ')"
D G "isxdigit" 4 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 4 21 "(x)  ((x)<' ')"
D G "isprint" 4 22 "(x)  ((x)>=' ')"
D G "isgraph" 4 23 "(x)  ((x)>' ')"
D G "ispunct" 4 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 2 19 10 "FUNCTION"
F G "memmove" 2 34 "*int8()"
V L "s1" 2 34 "*int8"
V L "s2" 2 34 "*int8"
V L "n" 2 34 "int8"
V L "sc1" 2 36 "*int8"
V L "sc2" 2 37 "*int8"
D G "strcopy" 2 54 "strcpy"
C L "strncpy" 2 19 4 "FUNCTION"
F G "strncpy" 2 61 "*int8()"
V L "s1" 2 61 "*int8"
V L "s2" 2 61 "*int8"
V L "n" 2 61 "int8"
V L "s" 2 63 "*int8"
C L "strcat" 2 19 3 "FUNCTION"
F G "strcat" 2 78 "*int8()"
V L "s1" 2 78 "*int8"
V L "s2" 2 78 "*int8"
V L "s" 2 80 "*int8"
C L "strncat" 2 19 2 "FUNCTION"
F G "strncat" 2 96 "*int8()"
V L "s1" 2 96 "*int8"
V L "s2" 2 96 "*int8"
V L "n" 2 96 "int8"
V L "s" 2 98 "*int8"
C L "memcmp" 2 19 3 "FUNCTION"
F G "memcmp" 2 120 "sint8()"
V L "s1" 2 120 "*int8"
V L "s2" 2 120 "*int8"
V L "n" 2 120 "int8"
V L "su1" 2 122 "*int8"
V L "su2" 2 122 "*int8"
C L "strcmp" 2 19 2 "FUNCTION"
F G "strcmp" 2 134 "sint8()"
V L "s1" 2 134 "*int8"
V L "s2" 2 134 "*int8"
C L "strcoll" 2 19 2 "FUNCTION"
F G "strcoll" 2 144 "sint8()"
V L "s1" 2 144 "*int8"
V L "s2" 2 144 "*int8"
C L "strncmp" 2 19 4 "FUNCTION"
F G "strncmp" 2 157 "sint8()"
V L "s1" 2 157 "*int8"
V L "s2" 2 157 "*int8"
V L "n" 2 157 "int8"
C L "strxfrm" 2 19 3 "FUNCTION"
F G "strxfrm" 2 169 "int8()"
V L "s1" 2 169 "*int8"
V L "s2" 2 169 "*int8"
V L "n" 2 169 "int8"
V L "s" 2 171 "*int8"
V L "n1" 2 172 "int8"
C L "memchr" 2 19 3 "FUNCTION"
F G "memchr" 2 191 "*int8()"
V L "s" 2 191 "*int8"
V L "c" 2 191 "int8"
V L "n" 2 191 "int8"
V L "uc" 2 193 "int8"
V L "su" 2 194 "*int8"
C L "strchr" 2 19 2 "FUNCTION"
F G "strchr" 2 205 "*int8()"
V L "s" 2 205 "*int8"
V L "c" 2 205 "int8"
C L "strcspn" 2 19 4 "FUNCTION"
F G "strcspn" 2 217 "int8()"
V L "s1" 2 217 "*int8"
V L "s2" 2 217 "*int8"
V L "sc1" 2 219 "*int8"
V L "sc2" 2 219 "*int8"
C L "strpbrk" 2 19 4 "FUNCTION"
F G "strpbrk" 2 232 "*int8()"
V L "s1" 2 232 "*int8"
V L "s2" 2 232 "*int8"
V L "sc1" 2 234 "*int8"
V L "sc2" 2 234 "*int8"
C L "strrchr" 2 19 2 "FUNCTION"
F G "strrchr" 2 247 "*int8()"
V L "s" 2 247 "*int8"
V L "c" 2 247 "int8"
V L "p" 2 249 "*int8"
C L "strspn" 2 19 2 "FUNCTION"
F G "strspn" 2 262 "int8()"
V L "s1" 2 262 "*int8"
V L "s2" 2 262 "*int8"
V L "sc1" 2 264 "*int8"
V L "sc2" 2 264 "*int8"
C L "strstr" 2 19 6 "FUNCTION"
F G "strstr" 2 281 "*int8()"
V L "s1" 2 281 "*int8"
V L "s2" 2 281 "*int8"
V L "s" 2 283 "*int8"
V L "t" 2 283 "*int8"
C L "strtok" 2 19 13 "FUNCTION"
F G "strtok" 2 320 "*int8()"
V L "s1" 2 320 "*int8"
V L "s2" 2 320 "*int8"
V L "beg" 2 322 "*int8"
V L "end" 2 322 "*int8"
V L "save" 2 323 "*int8"
C L "strlen" 2 19 6 "FUNCTION"
F G "strlen" 2 369 "int8()"
V L "s" 2 369 "*int8"
V L "sc" 2 371 "*int8"
C L "stricmp" 2 19 2 "FUNCTION"
F G "stricmp" 2 380 "sint8()"
V L "s1" 2 380 "*int8"
V L "s2" 2 380 "*int8"
C L "strlwr" 2 19 3 "FUNCTION"
F G "strlwr" 2 394 "*int8()"
V L "s" 2 394 "*int8"
V L "p" 2 396 "*int8"
D G "MAXFILES" 5 1 "1" "This define specifies the maximum number"
D G "ENABLE_FILELISTNG" 5 11 ""
T G "diskinforec" 5 34 "{int8[3] hJumpCode,int8[8] OEMName,int16 hBytesPerSector,int8 bSectorsPerCluster,int16 Reserved1,int8 FATCopies,int16 hMaxRootEntries,int16 hSectors,int8 Descriptor,int16 holdSectorsPerFat,int16 hSectorsPerTrack,int16 hNumberofHeads,int32 hNumberofHidden,int32 hNumberofSectors,int32 hSectorsPerFat,int16 hFlags,int16 hFAT32Version,int32 hRootStartCluster}"
T G "DIR" 5 47 "{int8[8] sName,int8[3] spam,int8 bAttr,int8[8] bReserved,int16 hClusterH,int16 hTime,int16 hDate,int16 hCluster,int32 wSize}"
T G "FILE" 5 60 "{int8[512] IOpuffer,DIR DirEntry,int32 CurrentCluster,int16 posinsector,int32 position,int32 dirSector,int8 dirIdx,int8 mode,int1 Free}"
T G "FAT32Vars" 5 72 "{int32 MMCAddress,int32 FATstartidx,int32 gStartSector,int32 gFirstDataSector,int8 gDirEntryIdx,int32 gDirEntrySector,int8 gFirstEmptyDirEntry,int32 gFirstDirEntryCluster}"
T G "TimeRecord" 5 82 "{int16 Year,int8 Month,int8 Day,int8 Hour,int8 Minute,int8 Second}"
T G "ListPos" 5 89 "{int32 dirSector,int32 CurrentCluster,int8 dirIdx}"
T G "LongFileName" 5 97 "{*int8 name,*int8 shortName,int1 isDir,int1 isLong}"
T G "MMCResponse" 5 99 "int8"
F G "MMCInit" 5 101 "MMCResponse()"
F G "ReadSector" 5 102 "MMCResponse()"
V L "sector" 5 102 "int32"
V L "hova" 5 102 "*int8"
F G "WriteSector" 5 103 "MMCResponse()"
V L "sector" 5 103 "int32"
V L "honnan" 5 103 "*int8"
F G "InitFAT" 5 105 "void()"
F G "FindDirEntry" 5 106 "int8()"
V L "fname" 5 106 "*int8"
V L "f" 5 106 "int8"
F G "InitList" 5 109 "MMCResponse()"
V L "path" 5 109 "*int8"
F G "ListFiles" 5 110 "int8()"
V L "f" 5 110 "int8"
F G "NextPage" 5 111 "MMCResponse()"
V L "f" 5 111 "int8"
F G "SetPage" 5 112 "MMCResponse()"
V L "f" 5 112 "int8"
V L "page" 5 112 "int32"
F G "CloseList" 5 113 "MMCResponse()"
V L "f" 5 113 "int8"
F G "FreeList" 5 114 "void()"
F G "fopen" 5 117 "MMCResponse()"
V L "fname" 5 117 "*int8"
V L "mode" 5 117 "int8"
F G "fclose" 5 118 "MMCResponse()"
V L "f" 5 118 "int8"
F G "fflush" 5 119 "MMCResponse()"
V L "f" 5 119 "int8"
F G "cwd" 5 120 "int8()"
V L "fname" 5 120 "*int8"
V L "f" 5 120 "int8"
F G "fputch" 5 121 "MMCResponse()"
V L "be" 5 121 "int8"
V L "f" 5 121 "int8"
F G "fgetch" 5 122 "MMCResponse()"
V L "ki" 5 122 "*int8"
V L "f" 5 122 "int8"
F G "fputstring" 5 123 "MMCResponse()"
V L "be" 5 123 "*int8"
V L "f" 5 123 "int8" "fputs is reserved in CCS C"
F G "fread" 5 124 "int16()"
V L "buffer" 5 124 "*int8"
V L "leng" 5 124 "int16"
V L "f" 5 124 "int8"
F G "fwrite" 5 125 "MMCResponse()"
V L "buffer" 5 125 "*int8"
V L "leng" 5 125 "int16"
V L "f" 5 125 "int8"
F G "remove" 5 126 "MMCResponse()"
V L "fname" 5 126 "*int8"
F G "getfsize" 5 127 "MMCResponse()"
V L "fname" 5 127 "*int8"
V L "fsiz" 5 127 "*int32" "FAT32 DRIVER FOR MMC OVER SPI //////////////////////"
D G "MMC_SPI_SOFTWARE" 6 207 ""
D G "SET_MMC_TRIS" 6 213 "() set_tris_b(0x10)" "0b0001000 1=input,0=output"
D G "ChipSel" 6 215 "pin_B7" "Chip-Select pin"
D G "ChipClk" 6 216 "pin_B5" "SPI-Clock pin"
D G "ChipDout" 6 217 "pin_B6" "SPI-Data out pin"
D G "ChipDin" 6 218 "pin_B4" "SPI-Data in pin"
D G "MMC_Xfer" 6 224 "(a) SPI_Xfer(MMC_SPI,a)"
D G "_STDLIBM" 7 14 ""
C L "getfsize" 7 2 1 "FUNCTION"
C L "getfsize" 3 2 7 "FUNCTION"
T G "node_t" 7 29 "{int16 size,int16 next}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "getfsize" 8 3 6 "FUNCTION"
F G "create_node" 8 12 "*node_t()"
V L "size" 8 12 "int16"
V L "ptr" 8 12 "*node_t" "create node at given location"
V L "result" 8 14 "*node_t"
F G "update_node" 8 20 "void()"
V L "node" 8 20 "*node_t"
V L "size" 8 20 "int16" "update the size of given node"
D G "csize" 8 24 "32768"
D G "pos" 8 25 "15"
C L "insert_node_after" 8 3 2 "FUNCTION"
F G "insert_node_after" 8 50 "void()"
V L "place" 8 50 "*node_t"
V L "node" 8 50 "*node_t" "place the node after another given node"
F G "remove_node" 8 61 "void()"
V L "node" 8 61 "*node_t" "remove the given node from the memlist"
V L "ptr" 8 62 "*node_t"
C L "traverse" 8 3 6 "FUNCTION"
F G "traverse" 7 37 "void()"
V L "node" 7 39 "*node_t"
V L "temp" 7 39 "*node_t"
V L "nsize" 7 40 "int16"
V L "nextsize" 7 40 "int16"
C L "traverse" 7 44 1 "FUNCTION"
C L "traverse" 7 44 1 "FUNCTION"
F G "malloc" 7 63 "*int8()"
V L "size" 7 63 "int8"
V L "node" 7 65 "*node_t"
V L "new" 7 65 "*node_t"
V L "nsize" 7 66 "int16"
C L "malloc" 7 44 1 "FUNCTION"
C L "malloc" 7 44 1 "FUNCTION"
C L "malloc" 7 44 1 "FUNCTION"
C L "malloc" 7 44 1 "FUNCTION"
C L "malloc" 7 44 1 "FUNCTION"
C L "malloc" 7 44 1 "FUNCTION"
C L "malloc" 7 44 1 "FUNCTION"
C L "malloc" 7 44 1 "FUNCTION"
C L "malloc" 7 44 1 "FUNCTION"
C L "malloc" 7 44 1 "FUNCTION"
F G "calloc" 7 95 "*int8()"
V L "nmemb" 7 95 "int8"
V L "size" 7 95 "int8"
V L "node" 7 97 "*node_t"
V L "new" 7 97 "*node_t"
V L "nsize" 7 98 "int16"
V L "resize" 7 98 "int16"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
C L "calloc" 7 44 1 "FUNCTION"
F G "Free" 7 130 "void()"
V L "ptr" 7 130 "*int8"
V L "node" 7 132 "*node_t"
V L "nsize" 7 133 "int16"
C L "Free" 7 44 1 "FUNCTION"
C L "Free" 7 44 1 "FUNCTION"
C L "Free" 7 44 1 "FUNCTION"
F G "realloc" 7 156 "*int8()"
V L "ptr" 7 156 "*int8"
V L "size" 7 156 "int8"
V L "node" 7 158 "*node_t"
V L "new" 7 158 "*node_t"
V L "temp" 7 158 "*node_t"
V L "nsize" 7 159 "int16"
V L "nextsize" 7 159 "int16"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
C L "realloc" 7 44 1 "FUNCTION"
V G "FATTable" 6 238 "int32[128]"
V G "gFirstEmptyCluster" 6 239 "int32"
V G "gFAT32Vars" 6 241 "FAT32Vars"
V G "DiskInfo" 6 242 "diskinforec"
V G "gFiles" 6 243 "FILE[1]" "Time stores the date and time, this is used when writing and/or creating files"
V G "Time" 6 246 "TimeRecord" "Set the maximum number of files/dirs to be listed by Listfile()"
D G "MAX_FILE_LIST" 6 250 "10"
V G "StartList" 6 252 "ListPos"
V G "CurrentList" 6 253 "ListPos"
V G "changeList" 6 254 "int1" "Do not use this; it is only used by SetPage() and ListFiles() and Initialized by InitFAT()"
V G "FileList" 6 256 "LongFileName[10]"
D G "FSR0L" 6 269 "*0xFE9"
D G "POSTINC0" 6 270 "*0xFEE"
D G "MMC_OK" 6 273 "0"
D G "MMC_ERROR" 6 274 "0x80"
D G "MMC_INVALID_FILE" 6 275 "0x88"
D G "MMC_MAX_FILES_REACHED" 6 276 "0x90"
D G "MMC_NO_CARD_INSERTED" 6 277 "0x98"
D G "MMC_TIME_OUT" 6 278 "0xA0"
D G "MMC_INVALID_RESPONSE" 6 279 "0xA8"
D G "MMC_NOT_FOUND" 6 280 "0xB0"
D G "MMC_INVALID_CLUSTER" 6 281 "0xB8"
D G "MMC_END_OF_DIR" 6 282 "0xC0"
D G "MMC_INVALID_POSITION" 6 283 "0xC8"
D G "END_OF_DIR" 6 286 "17"
D G "DIRENTRYS_PER_SECTOR" 6 287 "16"
D G "CHARACTERS_IN_LONG_FILENAMES" 6 288 "13"
D G "CardInserted" 6 294 "() 1"
D G "MMC_Select" 6 297 "()    output_low(ChipSel)"
D G "MMC_Deselect" 6 298 "()   output_high(ChipSel)"
C L "IsSelfDir" 6 251 1 "FUNCTION"
F G "IsSelfDir" 6 304 "int8()"
V L "be" 6 304 "*int8"
F G "MMCOut" 6 312 "void()"
V L "indata" 6 312 "int8"
F G "MMC8Clock" 6 324 "void()"
F G "MMCIn" 6 336 "int8()"
F G "MMCInit" 6 349 "MMCResponse()"
V L "response" 6 351 "int8"
V L "iii" 6 351 "int8"
V L "errcnt" 6 351 "int8"
C L "MMCInit" 6 251 1 "FUNCTION"
C L "MMCInit" 6 251 1 "FUNCTION"
C L "MMCInit" 6 251 1 "FUNCTION"
C L "MMCInit" 6 251 1 "FUNCTION"
C L "MMCInit" 6 251 1 "FUNCTION"
C L "MMCInit" 6 251 1 "FUNCTION"
C L "GetCurrentDOSDate" 6 251 5 "FUNCTION"
F G "GetCurrentDOSDate" 6 420 "int16()"
V L "retval" 6 422 "int16"
C L "GetCurrentDOSTime" 6 251 5 "FUNCTION"
F G "GetCurrentDOSTime" 6 436 "int16()"
V L "retval" 6 438 "int16"
C L "ReadSector" 6 251 1 "FUNCTION"
F G "ReadSector" 6 448 "MMCResponse()"
V L "sector" 6 448 "int32"
V L "hova" 6 448 "*int8"
V L "errs" 6 450 "int8"
V L "response" 6 450 "int8"
V L "cnt2" 6 451 "int8"
V L "cnt3" 6 451 "int8"
C L "ReadSector" 6 487 1 "*0xFE9"
C L "ReadSector" 6 495 1 "*0xFEE"
C L "WriteSector" 6 495 1 "FUNCTION"
F G "WriteSector" 6 511 "MMCResponse()"
V L "sector" 6 511 "int32"
V L "honnan" 6 511 "*int8"
V L "errs" 6 513 "int8"
V L "response" 6 513 "int8"
V L "cnt2" 6 514 "int8"
V L "cnt3" 6 514 "int8"
C L "WriteSector" 6 495 1 "FUNCTION"
C L "WriteSector" 6 495 1 "FUNCTION"
C L "WriteSector" 6 553 1 "*0xFE9"
C L "WriteSector" 6 563 1 "*0xFEE"
C L "WriteSector" 6 563 1 "FUNCTION"
C L "WriteSector" 6 563 1 "FUNCTION"
C L "InitFAT" 6 563 1 "FUNCTION"
F G "InitFAT" 6 593 "void()"
V L "actsector" 6 595 "int32"
V L "i" 6 596 "int8"
C L "InitFAT" 6 563 1 "FUNCTION"
C L "InitFAT" 6 563 1 "FUNCTION"
F G "GetNextCluster" 6 627 "int32()"
V L "curcluster" 6 627 "int32"
V L "actsector" 6 629 "int32"
V L "clpage" 6 630 "int32"
V L "clpos" 6 631 "int8"
C L "GetNextCluster" 6 563 1 "FUNCTION"
F G "SetClusterEntry" 6 644 "void()"
V L "curcluster" 6 644 "int32"
V L "value" 6 644 "int32"
V L "actsector" 6 646 "int32"
V L "clpage" 6 647 "int32"
V L "clpos" 6 648 "int8"
F G "ClearClusterEntry" 6 664 "void()"
V L "curcluster" 6 664 "int32"
V L "actsector" 6 666 "int32"
V L "clpage" 6 667 "int32"
V L "clpos" 6 668 "int8"
F G "FindFirstFreeCluster" 6 685 "int32()"
V L "i" 6 687 "int32"
V L "st" 6 687 "int32"
V L "actsector" 6 687 "int32"
V L "retval" 6 687 "int32"
V L "j" 6 688 "int8"
C L "ConvertFilename" 6 563 1 "FUNCTION"
F G "ConvertFilename" 6 714 "void()"
V L "beDir" 6 714 "*DIR"
V L "name" 6 714 "*int8"
V L "i" 6 716 "int8"
V L "j" 6 716 "int8"
V L "c" 6 716 "int8"
C L "ConvertLongFilename" 6 563 2 "FUNCTION"
F G "ConvertLongFilename" 6 741 "void()"
V L "beDir" 6 741 "*DIR"
V L "name" 6 741 "*int8"
V L "i" 6 743 "int8"
V L "j" 6 743 "int8"
V L "c" 6 743 "int8"
F G "GetDOSName" 6 777 "void()"
V L "pDir" 6 777 "*DIR"
V L "fname" 6 777 "*int8"
V L "i" 6 779 "int8"
V L "j" 6 779 "int8"
V L "leng" 6 779 "int8"
V L "c" 6 779 "int8"
V L "toext" 6 779 "int8"
C L "ReadRootDirectory" 6 563 1 "FUNCTION"
F G "ReadRootDirectory" 6 805 "MMCResponse()"
V L "fil" 6 805 "int8"
V L "actsector" 6 807 "int32"
C L "FindDirEntry" 6 563 1 "FUNCTION"
F G "FindDirEntry" 6 822 "int8()"
V L "fname" 6 822 "*int8"
V L "f" 6 822 "int8"
V L "pDir" 6 824 "*DIR"
V L "i" 6 825 "int16"
V L "filename" 6 826 "int8[16]"
V L "nextcluster" 6 827 "int32"
V L "actsector" 6 827 "int32"
C L "FindDirEntry" 6 563 1 "FUNCTION"
C L "TryFile" 6 563 2 "FUNCTION"
F G "TryFile" 6 874 "*int8()"
V L "fname" 6 874 "*int8"
V L "f" 6 874 "*int8"
V L "i" 6 876 "int8"
V L "leng" 6 876 "int8"
V L "filename" 6 877 "*int8"
F G "strfill" 6 911 "void()"
V L "dest" 6 911 "*int8"
V L "source" 6 911 "*int8"
V L "position" 6 911 "int8"
V L "d" 6 913 "*int8"
C L "InitList" 6 563 11 "FUNCTION"
F G "InitList" 6 935 "MMCResponse()"
V L "path" 6 935 "*int8"
V L "f" 6 937 "int8"
C L "ListFiles" 6 563 3 "FUNCTION"
F G "ListFiles" 6 955 "int8()"
V L "f" 6 955 "int8"
V L "pDir" 6 957 "*DIR"
V L "filename" 6 958 "int8[14]" "should be enough with 13+1"
V L "i" 6 959 "int8"
V L "u" 6 959 "int8"
V L "fni" 6 959 "int8"
V L "len" 6 959 "int8"
V L "isLongFileName" 6 960 "int1"
V L "nextcluster" 6 961 "int32"
V L "actsector" 6 961 "int32"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "ListFiles" 6 563 1 "FUNCTION"
C L "NextPage" 6 563 2 "FUNCTION"
F G "NextPage" 6 1084 "MMCResponse()"
V L "f" 6 1084 "int8"
V L "nextcluster" 6 1086 "int32"
V L "actsector" 6 1086 "int32"
C L "NextPage" 6 563 1 "FUNCTION"
C L "SetPage" 6 563 1 "FUNCTION"
F G "SetPage" 6 1120 "MMCResponse()"
V L "f" 6 1120 "int8"
V L "page" 6 1120 "int32"
V L "i" 6 1122 "int32"
V L "res" 6 1123 "MMCResponse"
C L "SetPage" 6 563 1 "FUNCTION"
C L "SetPage" 6 563 1 "FUNCTION"
F G "CloseList" 6 1146 "MMCResponse()"
V L "f" 6 1146 "int8"
F G "FreeList" 6 1154 "void(int8 f)"
V L "i" 6 1156 "int8"
C L "FreeList" 6 563 1 "FUNCTION"
C L "FreeList" 6 563 1 "FUNCTION"
C L "FreeList" 6 563 1 "FUNCTION"
C L "fcreate" 6 563 2 "FUNCTION"
F G "fcreate" 6 1169 "MMCResponse()"
V L "f" 6 1169 "int8"
V L "fname" 6 1169 "*int8"
V L "pDir" 6 1171 "*DIR"
V L "actsector" 6 1172 "int32"
V L "actcl" 6 1172 "int32"
V L "i" 6 1173 "int16"
C L "fcreate" 6 563 1 "FUNCTION"
F G "ComposeCluster" 6 1211 "int32()"
V L "f" 6 1211 "int8"
V L "retval" 6 1213 "int32"
C L "fopen" 6 563 2 "FUNCTION"
F G "fopen" 6 1223 "MMCResponse()"
V L "fname" 6 1223 "*int8"
V L "mode" 6 1223 "int8"
V L "found" 6 1225 "int8"
V L "f" 6 1226 "int8"
V L "actsector" 6 1227 "int32"
V L "actcluster" 6 1227 "int32"
V L "nextcluster" 6 1227 "int32"
V L "filename" 6 1228 "*int8"
C L "fopen" 6 563 1 "FUNCTION"
C L "fclose" 6 563 1 "FUNCTION"
F G "fclose" 6 1291 "MMCResponse()"
V L "f" 6 1291 "int8"
C L "fflush" 6 563 1 "FUNCTION"
F G "fflush" 6 1302 "MMCResponse(int8 f)"
V L "f" 6 1302 "int8"
V L "actsector" 6 1304 "int32"
V L "pDir" 6 1305 "*DIR"
C L "fflush" 6 563 1 "FUNCTION"
C L "cwd" 6 563 1 "FUNCTION"
F G "cwd" 6 1325 "int8()"
V L "fname" 6 1325 "*int8"
V L "f" 6 1325 "int8"
V L "actsector" 6 1327 "int32"
C L "cwd" 6 563 1 "FUNCTION"
C L "cwd" 6 563 1 "FUNCTION"
C L "cwd" 6 563 1 "FUNCTION"
C L "cwd" 6 563 1 "FUNCTION"
C L "fputch" 6 563 1 "FUNCTION"
F G "fputch" 6 1352 "MMCResponse(int8 f)"
V L "be" 6 1352 "int8"
V L "f" 6 1352 "int8"
V L "nextcluster" 6 1354 "int32"
V L "actsector" 6 1354 "int32"
C L "fputstring" 6 563 1 "FUNCTION"
F G "fputstring" 6 1380 "MMCResponse()"
V L "be" 6 1380 "*int8"
V L "f" 6 1380 "int8"
V L "leng" 6 1382 "int16"
V L "i" 6 1382 "int16"
C L "fread" 6 563 1 "FUNCTION"
F G "fread" 6 1393 "int16()"
V L "buffer" 6 1393 "*int8"
V L "leng" 6 1393 "int16"
V L "f" 6 1393 "int8"
V L "i" 6 1395 "int16"
V L "retv" 6 1395 "int16"
V L "c" 6 1396 "int8"
V L "v" 6 1396 "int8"
C L "fwrite" 6 563 1 "FUNCTION"
F G "fwrite" 6 1416 "MMCResponse()"
V L "buffer" 6 1416 "*int8"
V L "leng" 6 1416 "int16"
V L "f" 6 1416 "int8"
V L "i" 6 1418 "int16"
C L "fgetch" 6 563 1 "FUNCTION"
F G "fgetch" 6 1428 "MMCResponse(int16 leng,int8 f)"
V L "ki" 6 1428 "*int8"
V L "f" 6 1428 "int8"
V L "nextcluster" 6 1430 "int32"
V L "actsector" 6 1430 "int32"
C L "remove" 6 563 1 "FUNCTION"
F G "remove" 6 1454 "MMCResponse()"
V L "fname" 6 1454 "*int8"
V L "i" 6 1456 "int8"
V L "found" 6 1456 "int8"
V L "f" 6 1457 "int8"
V L "pDir" 6 1458 "*DIR"
V L "nextcluster" 6 1459 "int32"
V L "CurrentCluster" 6 1459 "int32"
V L "filename" 6 1460 "*int8"
C L "getfsize" 6 563 1 "FUNCTION"
F G "getfsize" 6 1499 "MMCResponse()"
V L "fname" 6 1499 "*int8"
V L "fsiz" 6 1499 "*int32"
V L "found" 6 1501 "int8"
V L "f" 6 1502 "int8"
V L "pDir" 6 1503 "*DIR"
V L "filename" 6 1504 "*int8"
F G "MAIN" 0 36 "void()"
V L "f" 0 38 "int8"
V L "filename" 0 38 "int8[20]"
V L "res" 0 38 "int8"
V L "i" 0 38 "int8"
V L "c" 0 38 "int8"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
F B "spi_xfer" 0 3
